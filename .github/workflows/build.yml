name: Build

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - canary
  pull_request:
    branches:
      - main

jobs:
  linux:
    name: ${{ matrix.tag }}
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - tag: linux-aarch64
            arch: aarch64
            build-arch: arm64
            build-machine-arch: aarch64
            cpu: native
            runner: ubuntu-latest

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: qemu
        name: Setup QEMU
        if: ${{ matrix.build-arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/${{ matrix.build-arch }}

      - id: buildx
        name: Setup Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/${{ matrix.build-arch }}
          install: true # aliases `docker build` to `docker buildx`

      - id: build
        name: Build
        uses: docker/build-push-action@v4
        with:
          push: false
          context: .
          target: artifact
          platforms: linux/${{ matrix.build-arch }}
          cache-from: type=gha,mode=max,ignore-error=true
          cache-to: ${{ github.event_name == 'push' && 'type=gha,mode=max,ignore-error=true' || '' }}
          outputs: type=local,dest=${{ runner.temp }}/release
          build-args: |
            GIT_SHA=${{ github.sha }}  
            ARCH=${{ matrix.arch }}
            BUILDARCH=${{ matrix.build-arch }}
            BUILD_MACHINE_ARCH=${{ matrix.build-machine-arch }}
            CPU_TARGET=${{ matrix.cpu }}

      - id: prepare
        name: Prepare
        run: |
          cd ${{ runner.temp }}/release
          chmod +x bun-profile bun
          mkdir bun-${{ matrix.tag }}-profile
          mkdir bun-${{ matrix.tag }}
          if [ ! -x "$(command -v strip)" ]; then
            sudo apt-get update && sudo apt-get install -y binutils --no-install-recommends
          fi
          strip bun
          mv bun-profile bun-${{ matrix.tag }}-profile/bun-profile
          mv bun bun-${{ matrix.tag }}/bun
          if [ ! -x "$(command -v zip)" ]; then
            sudo apt-get update && sudo apt-get install -y zip --no-install-recommends
          fi
          zip -r bun-${{ matrix.tag }}-profile.zip bun-${{ matrix.tag }}-profile
          zip -r bun-${{ matrix.tag }}.zip bun-${{ matrix.tag }}

      - id: upload
        name: Upload bun-${{ matrix.tag }}
        uses: actions/upload-artifact@v3
        with:
          name: bun-${{ matrix.tag}}
          path: ${{ runner.temp }}/release/bun-${{ matrix.tag }}.zip

      - id: upload-profile
        name: Upload bun-${{ matrix.tag }}-profile
        uses: actions/upload-artifact@v3
        with:
          name: bun-${{ matrix.tag }}-profile
          path: ${{ runner.temp }}/release/bun-${{ matrix.tag }}-profile.zip

      - id: release
        name: Release
        if: github.repository_owner == 'oven-sh' && github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          body: "This canary release of Bun corresponds to the commit [${{ github.sha }}]"
          allowUpdates: true
          replacesArtifacts: true
          generateReleaseNotes: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Canary (${{github.sha}})"
          tag: "canary"
          artifacts: "${{runner.temp}}/release/bun-${{matrix.tag}}.zip,${{runner.temp}}/release/bun-${{matrix.tag}}-profile.zip"
