name: Build

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux:
    name: ${{ matrix.tag }}
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - tag: linux-aarch64
            arch: aarch64
            build-arch: arm64
            build-machine-arch: aarch64
            cpu: native
            webkit-url: "https://github.com/oven-sh/WebKit/releases/download/may20/bun-webkit-linux-arm64-lto.tar.gz"
            webkit-basename: "bun-webkit-linux-arm64-lto"
            runner: ubuntu-latest

    steps:
      - id: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - id: qemu
        if: ${{ matrix.build-arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.build-arch }}

      - id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/${{ matrix.build-arch }}
          install: true # aliases `docker build` to `docker buildx`

      - id: setup
        run: |
          rm -rf ${{ runner.temp }}/release
          mkdir -p /tmp/.buildx-cache-${{ matrix.tag }}

      - id: build
        uses: docker/build-push-action@v3
        with:
          push: false
          context: .
          target: artifact
          platforms: linux/${{ matrix.build-arch }}
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.tag }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.tag }}
          outputs: type=local,dest=${{ runner.temp }}/release
          build-args: |
            GIT_SHA=${{ github.sha }}  
            ARCH=${{ matrix.arch }}
            BUILDARCH=${{ matrix.build-arch }}
            BUILD_MACHINE_ARCH=${{ matrix.build-machine-arch }}
            CPU_TARGET=${{ matrix.cpu }}
            WEBKIT_URL=${{ matrix.webkit-url }}
            WEBKIT_BASENAME=${{ matrix.webkit-basename }}

      - id: Zip
        run: |
          # if zip is not found
          if [ ! -x "$(command -v zip)" ]; then
            sudo apt-get update && sudo apt-get install -y zip --no-install-recommends
          fi

          if [ ! -x "$(command -v strip)" ]; then
            sudo apt-get update && sudo apt-get install -y binutils --no-install-recommends
          fi

          cd ${{runner.temp}}/release
          chmod +x bun-profile bun

          mkdir bun-${{matrix.tag}}-profile
          mkdir bun-${{matrix.tag}}

          strip bun

          mv bun-profile bun-${{matrix.tag}}-profile/bun-profile
          mv bun bun-${{matrix.tag}}/bun

          zip -r bun-${{matrix.tag}}-profile.zip bun-${{matrix.tag}}-profile
          zip -r bun-${{matrix.tag}}.zip bun-${{matrix.tag}}

      - uses: actions/upload-artifact@v3
        with:
          name: bun-${{matrix.tag}}-profile
          path: ${{runner.temp}}/release/bun-${{matrix.tag}}-profile.zip

      - uses: actions/upload-artifact@v3
        with:
          name: bun-${{matrix.tag}}
          path: ${{runner.temp}}/release/bun-${{matrix.tag}}.zip

      - uses: actions/upload-artifact@v3
        with:
          name: bun-obj-${{matrix.tag}}
          path: ${{runner.temp}}/release/bun-obj

      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.tag}}-dependencies
          path: ${{runner.temp}}/release/bun-dependencies

      - name: Release
        id: release
        uses: ncipollo/release-action@v1
        if: |
          github.repository_owner == 'oven-sh' && github.ref == 'refs/heads/main'
        with:
          prerelease: true
          body: "This canary release of Bun corresponds to the commit [${{ github.sha }}]"
          allowUpdates: true
          replacesArtifacts: true
          generateReleaseNotes: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Canary (${{github.sha}})"
          tag: "canary"
          artifacts: "${{runner.temp}}/release/bun-${{matrix.tag}}.zip,${{runner.temp}}/release/bun-${{matrix.tag}}-profile.zip"
